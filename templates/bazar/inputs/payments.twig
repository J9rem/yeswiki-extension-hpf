{#
 * This file is part of the YesWiki Extension hpf.
 *
 * Authors : see README.md file that was distributed with this source code.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 * Feature UUID : hpf-payments-field
 *#}

{% macro blocAdhesionDon(elemKey,title,options) %}
    {% set aliasElemKey = (elemKey == 'adhesion') ? 'membership' : ((elemKey == 'adhesion_groupe') ? 'group_membership' : 'donation') %}
    {% if options.years[aliasElemKey] is not empty %}
        <li>
            <b>{{ title }} : </b>
            <ul v-if="payment.{{ elemKey }}">
                <li v-for="([annee,value],keyYear) in payment.{{ elemKey }}">
                    <select form="unknown-id" v-model="payment.{{ elemKey }}[keyYear][0]">
                        {% for optionName,optionValue in options.years[aliasElemKey] %}
                            <option value="{{ optionName }}">{{ optionValue }}</option>
                        {% endfor %}
                    </select> : <input type="text" v-model="payment.{{ elemKey }}[keyYear][1]" form="unknown-id" pattern="[0-9]+([.,][0-9]{1,2})?"/>&nbsp;€
                    <button 
                        class="btn btn-danger btn-xs" 
                        type="button"
                        @click="removeSubElem(key,{{ elemKey|json_encode }},keyYear)"
                        >❌</button>
                </li>
            </ul>
            <button 
                class="btn btn-success btn-xs" 
                type="button"
                @click="createSubElem(key,{{ elemKey|json_encode }})"
                >➕</button>
        </li>
    {% endif %}
{% endmacro %}

{% extends "@bazar/layouts/input.twig" %}

{% block label %}
  {{ include_css('tools/hpf/styles/fields/payments.css') }}
  {{ parent() }}
  <button 
    class="btn btn-info btn-xs collapsed payment-collapse-button" 
    type="button" 
    data-toggle="collapse" 
    data-target="#{{field.propertyName}}-payments-input" 
    aria-expanded="false" 
    aria-controls="{{field.propertyName}}-payments-input">
      <i class="fas fa-caret-down show-collapsed"></i>
      <i class="fas fa-caret-up hide-collapsed"></i>
  </button>
{% endblock %}

{% block input %}
    {{ include_javascript('javascripts/vendor/vue/vue.js') }}
    {{ include_javascript('tools/hpf/javascripts/vendor/vuejs-datepicker/vuejs-datepicker.min.js') }}
    {{ include_javascript('tools/hpf/javascripts/vendor/vuejs-datepicker/translations.min.js') }}
    {{ include_javascript('tools/hpf/javascripts/fields/payments-input.js',false,true) }}
    <div class="collapse" id="{{field.propertyName}}-payments-input">
        <div class="payment-input-field" data-payments="{{ payments|json_encode|e('html_attr') }}">
            <ul>
                <li v-for="(payment,key) in payments">
                    <b><input type="text" v-model="payment.id" form="unknown-id" /></b>:&nbsp;
                    <button 
                        class="btn btn-info btn-xs" 
                        type="button"
                        @click="payment.visibility = !payment.visibility"
                        >
                            <i v-if="!payment.visibility" class="fas fa-caret-down"></i>
                            <i v-if="payment.visibility" class="fas fa-caret-up"></i>
                    </button>
                    <button 
                        class="btn btn-danger btn-xs" 
                        type="button"
                        @click="removePayment(key)"
                        >❌</button>
                    <button 
                        class="btn btn-info btn-xs" 
                        type="button"
                        @click="refreshPayment(key)"
                        :disabled="payments[key].refreshing"
                        >↻</button><br/>
                    <ul v-show="payment.visibility" :id="`{{field.propertyName}}-payment-input-${payment.id}`">
                        <li>Date : <vuejs-datepicker 
                                :format="customFormatterDate" 
                                :typeable="true" 
                                :name="`datepicker-${payment.id}`" 
                                :monday-first="true"
                                :language="datePickerLanguage"
                                wrapper-class="datepicker-container"
                                :value="payment.customDate"
                                @selected="(date)=>updateDate({key,date})">
                            </vuejs-datepicker> ({{ "{{ customFormatterDate(payment.customDate) }}" }})
                        </li>
                        <li>Origine :
                            <select form="unknown-id" v-model="payment.origin">
                                {% for option in options.origins %}
                                    <option value="{{ option.id }}">{{ option.name }}</option>
                                {% endfor %}
                            </select>
                        </li>
                        <li>Total : <input type="text" v-model="payment.total" form="unknown-id" pattern="[0-9]+([.,][0-9]{1,2})?"/>&nbsp;€</li>
                        {{ _self.blocAdhesionDon('adhesion','Adhésions',options) }}
                        {{ _self.blocAdhesionDon('adhesion_groupe','Adhésions groupe',options) }}
                        {{ _self.blocAdhesionDon('don','Dons',options) }}
                    </ul>
                </li>
            </ul>
            
            <button 
                class="btn btn-success btn-xs" 
                type="button"
                @click="createPayment"
                >➕</button>
            <input
                type="text"
                :value="value"
                id="{{ field.name }}"
                name="{{ field.name }}"
                class="form-control input-xxlarge"
                {% if field.required %}required{% endif %}
                {# style="display:none;" #}
            />
        </div>
    </div>
{% endblock %}